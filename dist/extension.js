"use strict";var xe=Object.create;var ee=Object.defineProperty;var Te=Object.getOwnPropertyDescriptor;var Ie=Object.getOwnPropertyNames;var Se=Object.getPrototypeOf,ke=Object.prototype.hasOwnProperty;var Ae=(o,e)=>{for(var n in e)ee(o,n,{get:e[n],enumerable:!0})},ue=(o,e,n,r)=>{if(e&&typeof e=="object"||typeof e=="function")for(let c of Ie(e))!ke.call(o,c)&&c!==n&&ee(o,c,{get:()=>e[c],enumerable:!(r=Te(e,c))||r.enumerable});return o};var _=(o,e,n)=>(n=o!=null?xe(Se(o)):{},ue(e||!o||!o.__esModule?ee(n,"default",{value:o,enumerable:!0}):n,o)),je=o=>ue(ee({},"__esModule",{value:!0}),o);var De={};Ae(De,{FREE_LIMITS:()=>H,activate:()=>Le,colorToEmoji:()=>q,deactivate:()=>Oe});module.exports=je(De);var I=_(require("vscode")),B=_(require("fs")),oe=_(require("path"));var G=_(require("fs")),se=_(require("path")),me=".codepin.tags.json";function K(o){let e=se.join(o,me);if(!G.existsSync(e))return[];try{let n=G.readFileSync(e,"utf8");return JSON.parse(n)}catch{return[]}}function z(o,e){let n=se.join(o,me);G.writeFileSync(n,JSON.stringify(e,null,2),"utf8")}var R=_(require("vscode"));function N(o){return o.globalState.get("codepinProUnlocked",!1)||!!R.workspace.getConfiguration("codepin").get("proLicenseKey")}function V(o){R.window.showInformationMessage(o,"Upgrade to Pro").then(e=>{e==="Upgrade to Pro"&&R.env.openExternal(R.Uri.parse("https://echogrid.gumroad.com/l/codepinprolicensekey"))})}var ge;function he(o){ge=o}function J(){return ge}function X(o,e){if(!o?.length)return"";let n=I.workspace.getConfiguration("codepin").get("showTagColors",!0);return"["+o.map(r=>{let c=e.find(p=>p.id===r);return c?n?`${q(c.color)} ${c.name}`:c.name:""}).filter(Boolean).join(", ")+"]"}function re(o,e=""){let n=I.workspace.getConfiguration("codepin").get("showFullPath",!1),r=o.file.replace(/\\/g,"/"),c=r.split("/").pop(),p="?";typeof o.line=="number"?p=(o.line+1).toString():Array.isArray(o.line)&&(p=`${o.line[0]+1}\u2013${o.line[1]+1}`);let P=n?`${r}:${p}`:`${c}:${p}`,y=`**Title:** ${o.title}

 **File:** ${P}`;return e&&(y+=`

 **Linetext:**
\`\`\`
${e}
\`\`\``),o.note&&(y+=`

---

#### \u{1F4DD} Note
     ${o.note}`),new I.MarkdownString(y)}function we(o){let e=`**Title:** ${o.title}`;return o.note&&(e+=`

---

#### \u{1F4DD} Note
     ${o.note}`),new I.MarkdownString(e)}var ae=10;async function le(o,e){try{let n=await I.workspace.openTextDocument(oe.join(e,o.file));if(typeof o.line=="number"&&o.line<n.lineCount)return n.lineAt(o.line).text.trim();if(Array.isArray(o.line)){let r=Math.min(o.line[0],o.line[1]),c=Math.max(o.line[0],o.line[1]),p=[];for(let y=r;y<=c&&y<n.lineCount;y++)p.push(n.lineAt(y).text.trim());let P="";return p.length>ae&&(P=`
...and ${p.length-ae} more lines`),p.slice(0,ae).join(`
`)+P}else return"(Line missing)"}catch{return"(File missing)"}}var te=class{constructor(e,n){this.workspaceRoot=e;this.extensionContext=n;this.teamFile=oe.join(this.workspaceRoot,".codepin.team.json"),this.localFile=oe.join(this.workspaceRoot,".codepin.local.json"),this.loadData()}dropMimeTypes=["application/vnd.codepin.treeitem"];dragMimeTypes=["application/vnd.codepin.treeitem"];tags=[];teamFile;localFile;teamPins=[];teamFolders=[];localPins=[];localFolders=[];_onDidChangeTreeData=new I.EventEmitter;onDidChangeTreeData=this._onDidChangeTreeData.event;pins=[];folders=[];refresh(){this.tags=K(this.workspaceRoot),this.loadData(),this._onDidChangeTreeData.fire()}getTreeItem(e){return e}loadData(){if(B.existsSync(this.teamFile))try{let e=JSON.parse(B.readFileSync(this.teamFile,"utf8"));this.teamPins=(e.pins||[]).map(n=>({...n,tags:Array.isArray(n.tags)?n.tags:[],type:"team"})),this.teamFolders=(e.folders||[]).map(n=>({...n,tags:Array.isArray(n.tags)?n.tags:[],type:"team"}))}catch{this.teamPins=[],this.teamFolders=[]}else this.teamPins=[],this.teamFolders=[];if(B.existsSync(this.localFile))try{let e=JSON.parse(B.readFileSync(this.localFile,"utf8"));this.localPins=(e.pins||[]).map(n=>({...n,tags:Array.isArray(n.tags)?n.tags:[],type:"local"})),this.localFolders=(e.folders||[]).map(n=>({...n,tags:Array.isArray(n.tags)?n.tags:[],type:"local"}))}catch{this.localPins=[],this.localFolders=[]}else this.localPins=[],this.localFolders=[]}getParent(e){if(e.isFolder&&e.folder){let n=e.folder.type==="team"?"Team":"Local",r=e.folder.type==="team"?"codepin-team-root":"codepin-local-root";return new L(n,I.TreeItemCollapsibleState.Expanded,void 0,void 0,!0,r)}if(!e.isFolder&&e.pin){let n=e.pin;if(n.parentFolderId){let p=(n.type==="team"?this.teamFolders:this.localFolders).find(P=>P.id===n.parentFolderId);if(p)return new L(p.title,I.TreeItemCollapsibleState.Collapsed,void 0,p,!0)}let r=n.type==="team"?"Team":"Local",c=n.type==="team"?"codepin-team-root":"codepin-local-root";return new L(r,I.TreeItemCollapsibleState.Expanded,void 0,void 0,!0,c)}}async getChildren(e){let n=I.workspace.getConfiguration("codepin").get("openPinOnClick",!0),r=I.workspace.getConfiguration("codepin").get("showFullPath",!1),c={blue:this.extensionContext.asAbsolutePath("resources/pin_blue.svg"),green:this.extensionContext.asAbsolutePath("resources/pin_green.svg"),purple:this.extensionContext.asAbsolutePath("resources/pin_purple.svg"),red:this.extensionContext.asAbsolutePath("resources/pin_red.svg"),yellow:this.extensionContext.asAbsolutePath("resources/pin_yellow.svg"),orange:this.extensionContext.asAbsolutePath("resources/pin_orange.svg"),brown:this.extensionContext.asAbsolutePath("resources/pin_brown.svg"),black:this.extensionContext.asAbsolutePath("resources/pin_black.svg"),white:this.extensionContext.asAbsolutePath("resources/pin_white.svg")},p={blue:this.extensionContext.asAbsolutePath("resources/folder_blue.svg"),green:this.extensionContext.asAbsolutePath("resources/folder_green.svg"),purple:this.extensionContext.asAbsolutePath("resources/folder_purple.svg"),red:this.extensionContext.asAbsolutePath("resources/folder_red.svg"),yellow:this.extensionContext.asAbsolutePath("resources/folder_yellow.svg"),orange:this.extensionContext.asAbsolutePath("resources/folder_orange.svg"),brown:this.extensionContext.asAbsolutePath("resources/folder_brown.svg"),black:this.extensionContext.asAbsolutePath("resources/folder_black.svg"),white:this.extensionContext.asAbsolutePath("resources/folder_white.svg")};if(!e){let P=J();return N(P)?[new L("Team",I.TreeItemCollapsibleState.Expanded,void 0,void 0,!0,"codepin-team-root"),new L("Local",I.TreeItemCollapsibleState.Expanded,void 0,void 0,!0,"codepin-local-root")]:[new L("Local",I.TreeItemCollapsibleState.Expanded,void 0,void 0,!0,"codepin-local-root")]}if(e.label==="Team"){let P=this.teamFolders.sort((i,g)=>(i.order??0)-(g.order??0)).map(i=>{let g=i.title;i.note&&(g="\xB7 "+g),i.tags&&i.tags.length>0&&(g+=" "+X(i.tags,this.tags));let h=new L(g,I.TreeItemCollapsibleState.Collapsed,void 0,i,!0),j=i.color&&p[i.color]?i.color:"blue";return h.iconPath=p[j],h.tooltip=we(i),h}),y=await Promise.all(this.teamPins.filter(i=>!i.parentFolderId).sort((i,g)=>(i.order??0)-(g.order??0)).map(async i=>{let g=i.title;i.note&&(g="\xB7 "+g),r&&(g+=` (${i.file}:${typeof i.line=="number"?i.line+1:Array.isArray(i.line)?`${i.line[0]+1}-${i.line[1]+1}`:"?"})`),i.tags&&i.tags.length>0&&(g+=" "+X(i.tags,this.tags));let h=new L(g,I.TreeItemCollapsibleState.None,i,void 0,!1),j=i.color&&c[i.color]?i.color:"red";h.iconPath=c[j];let O=await le(i,this.workspaceRoot);return h.tooltip=re(i,O),n&&(h.command={command:"codepin.openPin",title:"Open Pin",arguments:[i]}),h}));return[...P,...y]}if(e.label==="Local"){let P=this.localFolders.sort((i,g)=>(i.order??0)-(g.order??0)).map(i=>{let g=i.title;i.note&&(g="\xB7 "+g),i.tags&&i.tags.length>0&&(g+=" "+X(i.tags,this.tags));let h=new L(g,I.TreeItemCollapsibleState.Collapsed,void 0,i,!0),j=i.color&&p[i.color]?i.color:"blue";return h.iconPath=p[j],h.tooltip=we(i),h}),y=await Promise.all(this.localPins.filter(i=>!i.parentFolderId).sort((i,g)=>(i.order??0)-(g.order??0)).map(async i=>{let g=i.title;i.note&&(g="\xB7 "+g),r&&(g+=` (${i.file}:${typeof i.line=="number"?i.line+1:Array.isArray(i.line)?`${i.line[0]+1}-${i.line[1]+1}`:"?"})`),i.tags&&i.tags.length>0&&(g+=" "+X(i.tags,this.tags));let h=new L(g,I.TreeItemCollapsibleState.None,i,void 0,!1),j=i.color&&c[i.color]?i.color:"red";h.iconPath=c[j];let O=await le(i,this.workspaceRoot);return h.tooltip=re(i,O),n&&(h.command={command:"codepin.openPin",title:"Open Pin",arguments:[i]}),h}));return[...P,...y]}if(e.isFolder&&e.folder){let P=e.folder,i=P.type==="team"?this.teamPins:this.localPins;return await Promise.all(i.filter(h=>h.parentFolderId===P.id).sort((h,j)=>(h.order??0)-(j.order??0)).map(async h=>{let j=h.title;h.note&&(j="\xB7 "+j),r&&(j+=` (${h.file}:${typeof h.line=="number"?h.line+1:Array.isArray(h.line)?`${h.line[0]+1}-${h.line[1]+1}`:"?"})`),h.tags&&h.tags.length>0&&(j+=" "+X(h.tags,this.tags));let O=new L(j,I.TreeItemCollapsibleState.None,h,void 0,!1),Y=h.color&&c[h.color]?h.color:"red";O.iconPath=c[Y];let M=await le(h,this.workspaceRoot);return O.tooltip=re(h,M),n&&(O.command={command:"codepin.openPin",title:"Open Pin",arguments:[h]}),O}))}return[]}getPinById(e){return this.pins.find(n=>n.id===e)}getFolderById(e){return this.folders.find(n=>n.id===e)}getPinItemForFolder(e){return new L(e.title,I.TreeItemCollapsibleState.Collapsed,void 0,e,!0)}getPinItemForPin(e){let n=e.title;return e.note&&(n="\xB7 "+n),new L(n,I.TreeItemCollapsibleState.None,e,void 0,!1)}movePinRelativeToPin(e,n,r){if(e.parentFolderId!==n.parentFolderId)return;let c=r.find(y=>y.id===e.id),p=r.find(y=>y.id===n.id);if(!c||!p||typeof c.order!="number"||typeof p.order!="number")return;let P=c.order;c.order=p.order,p.order=P}moveFolderRelativeToFolder(e,n,r){let c=r.find(y=>y.id===e.id),p=r.find(y=>y.id===n.id);if(!c||!p||typeof c.order!="number"||typeof p.order!="number")return;let P=c.order;c.order=p.order,p.order=P}async handleDrag(e,n,r){let c=e[0].pin?.type||e[0].folder?.type,p=e.map(P=>P.id).join(",");n.set("application/vnd.codepin.treeitem",new I.DataTransferItem(JSON.stringify({ids:p,type:c})))}async handleDrop(e,n,r){let c=await n.get("application/vnd.codepin.treeitem")?.asString();if(!c)return;let{ids:p,type:P}=JSON.parse(c),y=p.split(","),i=e?.pin?.type||e?.folder?.type;if(i&&i!==P){I.window.showWarningMessage("You can only move items within the same section (Team or Local).");return}let g=P==="team"?this.teamPins:this.localPins,h=P==="team"?this.teamFolders:this.localFolders,j=g.filter(M=>y.includes(M.id)),O=h.filter(M=>y.includes(M.id));for(let M of j)e&&e.pin&&M.parentFolderId===e.pin.parentFolderId?this.movePinRelativeToPin(M,e.pin,g):e&&e.folder?M.parentFolderId=e.folder.id:e||(M.parentFolderId=null);for(let M of O)e&&e.folder&&this.moveFolderRelativeToFolder(M,e.folder,h);let Y=P==="team"?this.teamFile:this.localFile;B.writeFileSync(Y,JSON.stringify({pins:g,folders:h},null,2),"utf8"),this.refresh()}},L=class extends I.TreeItem{constructor(n,r,c,p,P=!1,y){super(n,r);this.label=n;this.collapsibleState=r;this.pin=c;this.folder=p;this.isFolder=P;this.explicitId=y;P?this.contextValue=p?.note?"pinFolderWithNote":"pinFolder":this.contextValue=c?.note?"pinItemWithNote":"pinItem",this.id=y||(P&&p?p.id:c?.id||"")}};var t=_(require("vscode")),x=_(require("fs")),S=_(require("path"));var $=[];for(let o=0;o<256;++o)$.push((o+256).toString(16).slice(1));function ye(o,e=0){return($[o[e+0]]+$[o[e+1]]+$[o[e+2]]+$[o[e+3]]+"-"+$[o[e+4]]+$[o[e+5]]+"-"+$[o[e+6]]+$[o[e+7]]+"-"+$[o[e+8]]+$[o[e+9]]+"-"+$[o[e+10]]+$[o[e+11]]+$[o[e+12]]+$[o[e+13]]+$[o[e+14]]+$[o[e+15]]).toLowerCase()}var ve=require("crypto"),ie=new Uint8Array(256),ne=ie.length;function de(){return ne>ie.length-16&&((0,ve.randomFillSync)(ie),ne=0),ie.slice(ne,ne+=16)}var Pe=require("crypto"),ce={randomUUID:Pe.randomUUID};function $e(o,e,n){if(ce.randomUUID&&!e&&!o)return ce.randomUUID();o=o||{};let r=o.random??o.rng?.()??de();if(r.length<16)throw new Error("Random bytes length must be >= 16");if(r[6]=r[6]&15|64,r[8]=r[8]&63|128,e){if(n=n||0,n<0||n+16>e.length)throw new RangeError(`UUID byte range ${n}:${n+15} is out of buffer bounds`);for(let c=0;c<16;++c)e[n+c]=r[c];return e}return ye(r)}var Z=$e;var W=[{label:"\u{1F7E5} Red",value:"red"},{label:"\u{1F7E8} Yellow",value:"yellow"},{label:"\u{1F7E6} Blue",value:"blue"},{label:"\u{1F7E9} Green",value:"green"},{label:"\u{1F7EA} Purple",value:"purple"},{label:"\u{1F7E7} Orange",value:"orange"},{label:"\u{1F7EB} Brown",value:"brown"},{label:"\u2B1B Black",value:"black"},{label:"\u2B1C White",value:"white"}],Q=W.slice(0,5);var H={pins:20,folders:5,tags:5,colors:5};function Le(o){let e=t.workspace.workspaceFolders?.[0].uri.fsPath;if(he(o),!e){t.window.showWarningMessage("No workspace open.");return}let n=null,r=new te(e,o);t.workspace.onDidChangeConfiguration(s=>{(s.affectsConfiguration("codepin.showFullPath")||s.affectsConfiguration("codepin.openPinOnClick")||s.affectsConfiguration("codepin.showTagColors"))&&r.refresh()});let c=t.window.createTreeView("codepinView",{treeDataProvider:r,canSelectMany:!0,dragAndDropController:r,showCollapseAll:!1});o.subscriptions.push(c),r.refresh();let p="uWbookuatJS4rNHY9UiABg==",P=t.commands.registerCommand("codepin.enterProLicenseKey",async()=>{let s=await t.window.showInputBox({prompt:"Enter your Codepin Pro license key",ignoreFocusOut:!0,placeHolder:"Paste your Gumroad license key here"});s&&t.window.withProgress({location:t.ProgressLocation.Notification,title:"Validating license key...",cancellable:!1},async()=>{try{await i(s)?(await o.globalState.update("codepinProUnlocked",!0),await t.workspace.getConfiguration("codepin").update("proLicenseKey",s,t.ConfigurationTarget.Global),t.window.showInformationMessage("\u2B50 Codepin Pro unlocked! Enjoy all features."),t.commands.executeCommand("workbench.view.explorer"),r.refresh()):t.window.showErrorMessage("\u274C Invalid license key. Please check your Gumroad receipt or contact support.")}catch(l){let f="Unknown error";l instanceof Error?f=l.message:typeof l=="string"&&(f=l),t.window.showErrorMessage("$(error) Error validating license: "+f)}})});o.subscriptions.push(P);let y=t.commands.registerCommand("codepin.deactivateProLicense",async()=>{await t.window.showWarningMessage("Are you sure you want to deactivate your Pro license? This will lock all Pro features.",{modal:!0},"Deactivate")==="Deactivate"&&(await o.globalState.update("codepinProUnlocked",!1),await t.workspace.getConfiguration("codepin").update("proLicenseKey","",t.ConfigurationTarget.Global),t.window.showInformationMessage("Codepin Pro has been deactivated. Codepin Free restored."),t.commands.executeCommand("workbench.view.explorer"),r.refresh())});o.subscriptions.push(y);async function i(s){let l=await fetch("https://api.gumroad.com/v2/licenses/verify",{method:"POST",headers:{"Content-Type":"application/x-www-form-urlencoded"},body:new URLSearchParams({product_id:p,license_key:s,increment_uses_count:"false"}).toString()});if(!l.ok)return console.log("Gumroad API error status:",l.status),!1;let f=await l.json();return console.log("Gumroad API response:",f),f.success&&f.purchase&&!f.purchase.refunded&&!f.purchase.chargebacked&&!f.purchase.disputed&&!f.purchase.subscription_cancelled}o.subscriptions.push(t.commands.registerCommand("codepin.search",async()=>{let s=[...r.teamPins,...r.localPins],l=[...r.teamFolders,...r.localFolders];Ne(s,l,async(f,u)=>{if(f){let w=r.getPinItemForPin(f);try{await c.reveal(w,{expand:!0,select:!0,focus:!0})}catch{t.window.showWarningMessage("Could not reveal pin in tree")}t.commands.executeCommand("codepin.openPin",{pin:f})}else if(u){let w=r.getPinItemForFolder(u);try{await c.reveal(w,{expand:!0,select:!0,focus:!0})}catch{t.window.showWarningMessage("Could not reveal folder in tree")}}})})),o.subscriptions.push(t.commands.registerCommand("codepin.assignTag",async s=>{if(!e){t.window.showWarningMessage("No workspace open.");return}let l=c.selection;if(l.some(v=>v.id===s.id)||(l=[s]),new Set(l.map(v=>v.pin?.type||v.folder?.type)).size>1){t.window.showWarningMessage("You can only select pins/folders from either Team or Local at a time.");return}let w=l[0].pin?.type==="team"||l[0].folder?.type==="team"?S.join(e,".codepin.team.json"):S.join(e,".codepin.local.json");if(!x.existsSync(w)){t.window.showWarningMessage("Could not find pin data file.");return}let d=K(e);if(!d.length){t.window.showInformationMessage("No tags defined yet! Use the Tag Manager in the titlebar to add some.");return}let m=d.map(v=>({label:`${q(v.color)} ${v.name}`,picked:l.some(b=>b.isFolder&&b.folder&&Array.isArray(b.folder.tags)?b.folder.tags.includes(v.id):b.pin&&Array.isArray(b.pin.tags)?b.pin.tags.includes(v.id):!1),id:v.id})),a=await t.window.showQuickPick(m,{placeHolder:"Assign or remove tags (multi-select)",canPickMany:!0});if(!a)return;let k=a.map(v=>v.id),C=[],T=[];try{let v=x.readFileSync(w,"utf8"),b=JSON.parse(v);C=b.pins||[],T=b.folders||[]}catch{return}let F=!1;for(let v of l)v&&v.isFolder&&v.folder&&typeof v.folder.id=="string"?(T=T.map(b=>b.id===v.folder.id?{...b,tags:k}:b),F=!0):v&&!v.isFolder&&v.pin&&typeof v.pin.id=="string"&&(C=C.map(b=>b.id===v.pin.id?{...b,tags:k}:b),F=!0);F&&(x.writeFileSync(w,JSON.stringify({pins:C,folders:T},null,2),"utf8"),r.refresh?.(),t.window.showInformationMessage(k.length?`Tags updated for ${l.length} item${l.length>1?"s":""}!`:`All tags removed from ${l.length} item${l.length>1?"s":""}.`))})),o.subscriptions.push(t.commands.registerCommand("codepin.tagManager",async()=>{if(!e){t.window.showWarningMessage("No workspace open.");return}let s=K(e),l=[{label:"$(add) Add Tag",alwaysShow:!0,id:""}];s.length>0&&l.push(...s.map(d=>({label:`${q(d.color)} ${d.name}`,description:"",detail:"",id:d.id})));let f=await t.window.showQuickPick(l,{placeHolder:"Tag Manager: Add, rename, or delete tags"});if(!f)return;if(f.label==="$(add) Add Tag"){let d=N(o)?1/0:H.tags;if(s.length>=d){V(`You've reached the free limit of ${H.tags} tags. Upgrade to Pro for unlimited tags!`);return}let m=await t.window.showInputBox({prompt:"Enter a tag name",validateInput:F=>F.trim()?s.some(v=>v.name.toLowerCase()===F.trim().toLowerCase())?"Tag already exists":null:"Tag name cannot be empty"});if(!m)return;let a=N(J()),k=await t.window.showQuickPick(a?W:Q,{placeHolder:"Choose a tag color"});if(!k)return;let C={id:Z(),name:m.trim(),color:k.value},T=[...s,C];z(e,T),r.refresh(),t.window.showInformationMessage(`\u{1F3F7}\uFE0F Tag "${m.trim()}" added!`),await t.commands.executeCommand("codepin.tagManager");return}let u=s.find(d=>d.id===f.id);if(!u)return;let w=await t.window.showQuickPick([{label:"$(edit) Rename Tag"},{label:"$(symbol-color) Change Color"},{label:"$(trash) Delete Tag"},{label:"Cancel"}],{placeHolder:`Edit tag: ${u.name}`});if(!(!w||w.label==="Cancel")){if(w.label==="$(edit) Rename Tag"){let d=await t.window.showInputBox({prompt:`Rename tag "${u.name}"`,value:u.name,validateInput:m=>m.trim()?s.some(a=>a.name.toLowerCase()===m.trim().toLowerCase()&&a.id!==u.id)?"Another tag already has this name":null:"Tag name cannot be empty"});if(!d||d===u.name)return;u.name=d.trim(),z(e,s),r.refresh(),t.window.showInformationMessage(`Tag renamed to "${u.name}".`),await t.commands.executeCommand("codepin.tagManager");return}if(w.label==="$(symbol-color) Change Color"){let m=N(J())?W:Q,a=await t.window.showQuickPick(m,{placeHolder:"Choose a new tag color"});if(!a||a.value===u.color)return;u.color=a.value,z(e,s),r.refresh(),await t.commands.executeCommand("codepin.tagManager");return}if(w.label==="$(trash) Delete Tag"){if(await t.window.showWarningMessage(`Delete tag "${u.name}"? This will remove it from all pins/folders.`,"Delete")!=="Delete")return;let m=s.filter(a=>a.id!==u.id);Me(e,u.id),z(e,m),r.refresh(),t.window.showInformationMessage(`Tag "${u.name}" deleted.`),await t.commands.executeCommand("codepin.tagManager");return}}}));let g=s=>async l=>{let f=c.selection;if(f.some(d=>d.id===l.id)||(f=[l]),new Set(f.map(d=>d.pin?.type||d.folder?.type)).size>1){t.window.showWarningMessage("You can only select pins/folders from either Team or Local at a time.");return}let w={};for(let d of f){let a=(d.pin?.type||d.folder?.type)==="team"?S.join(e,".codepin.team.json"):S.join(e,".codepin.local.json");w[a]||(w[a]={pins:[],folders:[]}),d.isFolder&&d.folder?w[a].folders.push(d.folder):d.pin&&w[a].pins.push(d.pin)}for(let[d,{pins:m,folders:a}]of Object.entries(w)){if(!x.existsSync(d))continue;let k=x.readFileSync(d,"utf8"),C=[],T=[];try{let F=JSON.parse(k);C=F.pins||[],T=F.folders||[]}catch{continue}C=C.map(F=>m.some(v=>v.id===F.id)?{...F,color:s}:F),T=T.map(F=>a.some(v=>v.id===F.id)?{...F,color:s}:F),x.writeFileSync(d,JSON.stringify({pins:C,folders:T},null,2),"utf8")}r.refresh()};o.subscriptions.push(t.commands.registerCommand("codepin.setColor",async s=>{let l=N(J()),f=await t.window.showQuickPick(l?W:Q,{placeHolder:"Choose a color"});if(f){if(!l&&!Q.some(u=>u.value===f.value)){V("Unlock more colors with Codepin Pro!");return}await g(f.value)(s)}}));let h=t.commands.registerCommand("codepin.addPinFolder",async()=>{let s=await t.window.showInputBox({prompt:"Folder name"});if(!s)return;let l=N(J()),f=await t.window.showQuickPick(l?W:Q,{placeHolder:"Choose a folder color"});if(!f)return;let u=f.value,w=!1;if(N(o)){let T=["Local","Team"],F=await t.window.showQuickPick(T,{placeHolder:"Where do you want to add this pin/folder?"});if(!F)return;w=F==="Team"}let d=w?S.join(e,".codepin.team.json"):S.join(e,".codepin.local.json"),m=[],a=[];if(x.existsSync(d)){let T=x.readFileSync(d,"utf8");try{let F=JSON.parse(T);m=F.pins||[],a=F.folders||[]}catch{m=[],a=[]}}let k=N(o)?1/0:H.folders;if(a.length>=k){V(`CodePin Free lets you save up to ${H.folders} folders per workspace. Upgrade to Pro for unlimited folders!`);return}let C={id:Z(),title:s,color:u,order:a.length,type:w?"team":"local"};a.push(C),x.writeFileSync(d,JSON.stringify({pins:m,folders:a},null,2),"utf8"),t.window.showInformationMessage(`\u{1F4C1} Folder "${s}" added!`),r.refresh()}),j=t.commands.registerCommand("codepin.addPin",async()=>{let s=t.window.activeTextEditor;if(!s){t.window.showWarningMessage("No active editor found.");return}let l=s.selection,f=s.document.uri.fsPath,u;if(l.start.line!==l.end.line&&!N(o)){V("Multi-line pinning is a Pro feature! Upgrade to unlock it.");return}l.start.line===l.end.line?u=l.start.line:u=[l.start.line,l.end.line];let w=await t.window.showInputBox({prompt:"Give your pin a title"});if(!w)return;let d=N(J()),m=await t.window.showQuickPick(d?W:Q,{placeHolder:"Choose a pin color"});if(!m)return;let a=m.value,k=!1;if(N(o)){let U=["Local","Team"],D=await t.window.showQuickPick(U,{placeHolder:"Where do you want to add this pin/folder?"});if(!D)return;k=D==="Team"}let C=k?S.join(e,".codepin.team.json"):S.join(e,".codepin.local.json"),T=[],F=[];if(x.existsSync(C)){let U=x.readFileSync(C,"utf8");try{let D=JSON.parse(U);T=D.pins||[],F=D.folders||[]}catch{T=[],F=[]}}let v=N(o)?1/0:H.pins;if(T.length>=v){V(`Codepin Free lets you save up to ${H.pins} pins per workspace. Upgrade to Pro for unlimited pins!`);return}let b={id:Z(),file:S.relative(e,f),line:u,title:w,color:a,type:k?"team":"local",order:T.length};T.push(b),x.writeFileSync(C,JSON.stringify({pins:T,folders:F},null,2),"utf8");let E;if(typeof u=="number")E=`line ${u+1}`;else if(Array.isArray(u)){let U=Math.min(u[0],u[1])+1,D=Math.max(u[0],u[1])+1;E=`lines ${U}-${D}`}else E="(unknown line)";t.window.showInformationMessage(`\u{1F4CC} Pinned "${w}" at ${E}`),r.refresh()}),O=t.commands.registerCommand("codepin.openPin",s=>{let l=s.pin??s;if(!l||!l.file)return;let f=S.join(e,l.file),u=t.Uri.file(f);t.workspace.openTextDocument(u).then(w=>{t.window.showTextDocument(w).then(d=>{let m;if(typeof l.line=="number"){let a=new t.Position(l.line,0);m=new t.Selection(a,a)}else if(Array.isArray(l.line)){let a=Math.min(l.line[0],l.line[1]),k=Math.max(l.line[0],l.line[1]),C=new t.Position(a,0),T=new t.Position(k,w.lineAt(k).text.length);m=new t.Selection(C,T)}m&&(d.selection=m,d.revealRange(m,t.TextEditorRevealType.InCenter))})})}),Y=t.commands.registerCommand("codepin.delete",async s=>{let l=c.selection;if(l.some(C=>C.id===s.id)||(l=[s]),new Set(l.map(C=>C.pin?.type||C.folder?.type)).size>1){t.window.showWarningMessage("You can only select pins/folders from either Team or Local at a time.");return}let u={};for(let C of l){let F=(C.pin?.type||C.folder?.type)==="team"?S.join(e,".codepin.team.json"):S.join(e,".codepin.local.json");u[F]||(u[F]={pins:[],folders:[]}),C.isFolder&&C.folder?u[F].folders.push(C.folder):C.pin&&u[F].pins.push(C.pin)}let w=0,d=0;for(let[C,{pins:T,folders:F}]of Object.entries(u)){if(!x.existsSync(C))continue;let v=x.readFileSync(C,"utf8"),b=[],E=[];try{let A=JSON.parse(v);b=A.pins||[],E=A.folders||[]}catch{continue}let U=T.map(A=>A.id),D=F.map(A=>A.id);if(b.filter(A=>typeof A.parentFolderId=="string"&&D.includes(A.parentFolderId)&&!U.includes(A.id)).length>0&&await t.window.showInformationMessage("One or more folders you\u2019re deleting still contain pins. These pins will be moved to root. Continue?","Yes","No")!=="Yes")return;let pe=b.filter(A=>U.includes(A.id)),fe=E.filter(A=>D.includes(A.id));n={pins:pe,folders:fe,filePath:C},b=b.filter(A=>!U.includes(A.id)),b=b.map(A=>typeof A.parentFolderId=="string"&&D.includes(A.parentFolderId)&&!U.includes(A.id)?{...A,parentFolderId:null}:A),E=E.filter(A=>!D.includes(A.id)),w+=pe.length,d+=fe.length,x.writeFileSync(C,JSON.stringify({pins:b,folders:E},null,2),"utf8")}r.refresh();let m=[];w>0&&m.push(`${w} pin${w>1?"s":""}`),d>0&&m.push(`${d} folder${d>1?"s":""}`);let a=`Deleted ${m.join(" and ")}.`;if(await t.window.showInformationMessage(`${a} Undo?`,"Undo")==="Undo"&&n){let C=n.filePath,T=[],F=[];try{let v=x.readFileSync(C,"utf8"),b=JSON.parse(v);T=b.pins||[],F=b.folders||[]}catch{}T=[...T,...n.pins.filter(v=>!T.some(b=>b.id===v.id))],F=[...F,...n.folders.filter(v=>!F.some(b=>b.id===v.id))],x.writeFileSync(C,JSON.stringify({pins:T,folders:F},null,2),"utf8"),r.refresh(),t.window.showInformationMessage(`Restored ${m.join(" and ")}.`),n=null}}),M=t.commands.registerCommand("codepin.rename",async s=>{let f=s.pin?.type==="team"||s.folder?.type==="team"?S.join(e,".codepin.team.json"):S.join(e,".codepin.local.json");if(!x.existsSync(f))return;let u=await t.window.showInputBox({prompt:"Rename",value:s.isFolder&&s.folder?s.folder.title:s.pin?s.pin.title:""});if(!u)return;let w=x.readFileSync(f,"utf8"),d=[],m=[];try{let a=JSON.parse(w);d=a.pins||[],m=a.folders||[]}catch{return}s.isFolder&&s.folder?m=m.map(a=>a.id===s.folder.id?{...a,title:u}:a):s.pin&&(d=d.map(a=>a.id===s.pin.id?{...a,title:u}:a)),x.writeFileSync(f,JSON.stringify({pins:d,folders:m},null,2),"utf8"),r.refresh()}),Ce=t.commands.registerCommand("codepin.addNote",async s=>{let l=s.isFolder&&s.folder,f=l?s.folder.type==="team"?S.join(e,".codepin.team.json"):S.join(e,".codepin.local.json"):s.pin.type==="team"?S.join(e,".codepin.team.json"):S.join(e,".codepin.local.json");if(!x.existsSync(f))return;let u=await t.window.showInputBox({prompt:"Add a note"});if(u===null)return;let w=x.readFileSync(f,"utf8"),d=[],m=[];try{let a=JSON.parse(w);d=a.pins||[],m=a.folders||[]}catch{return}l?m=m.map(a=>a.id===s.folder.id?{...a,note:u}:a):s.pin&&(d=d.map(a=>a.id===s.pin.id?{...a,note:u}:a)),x.writeFileSync(f,JSON.stringify({pins:d,folders:m},null,2),"utf8"),r.refresh()}),Fe=t.commands.registerCommand("codepin.editNote",async s=>{let l=s.isFolder&&s.folder,f=l?s.folder.type==="team"?S.join(e,".codepin.team.json"):S.join(e,".codepin.local.json"):s.pin.type==="team"?S.join(e,".codepin.team.json"):S.join(e,".codepin.local.json");if(!x.existsSync(f))return;let u=l?s.folder.note:s.pin.note,w=await t.window.showInputBox({prompt:"Edit note",value:u||""});if(w===null)return;let d=x.readFileSync(f,"utf8"),m=[],a=[];try{let k=JSON.parse(d);m=k.pins||[],a=k.folders||[]}catch{return}l?a=a.map(k=>k.id===s.folder.id?{...k,note:w}:k):s.pin&&(m=m.map(k=>k.id===s.pin.id?{...k,note:w}:k)),x.writeFileSync(f,JSON.stringify({pins:m,folders:a},null,2),"utf8"),r.refresh()}),be=t.commands.registerCommand("codepin.removeNote",async s=>{let l=s.isFolder&&s.folder,f=l?s.folder.type==="team"?S.join(e,".codepin.team.json"):S.join(e,".codepin.local.json"):s.pin.type==="team"?S.join(e,".codepin.team.json"):S.join(e,".codepin.local.json");if(!x.existsSync(f)||await t.window.showInformationMessage("Remove note from this item?","Yes","Cancel")!=="Yes")return;let w=x.readFileSync(f,"utf8"),d=[],m=[];try{let a=JSON.parse(w);d=a.pins||[],m=a.folders||[]}catch{return}l?m=m.map(a=>a.id===s.folder.id?{...a,note:void 0}:a):s.pin&&(d=d.map(a=>a.id===s.pin.id?{...a,note:void 0}:a)),x.writeFileSync(f,JSON.stringify({pins:d,folders:m},null,2),"utf8"),r.refresh()});o.subscriptions.push(j,O,Y,M,h,Ce,Fe,be)}function q(o){switch(o){case"red":return"\u{1F7E5}";case"yellow":return"\u{1F7E8}";case"blue":return"\u{1F7E6}";case"green":return"\u{1F7E9}";case"purple":return"\u{1F7EA}";case"orange":return"\u{1F7E7}";case"brown":return"\u{1F7EB}";case"black":return"\u2B1B";case"white":return"\u2B1C";default:return""}}function Me(o,e){function n(r){if(!x.existsSync(r))return;let c=[],p=[];try{let y=x.readFileSync(r,"utf8"),i=JSON.parse(y);c=i.pins||[],p=i.folders||[]}catch{return}let P=!1;c=c.map(y=>y.tags&&y.tags.includes(e)?(P=!0,{...y,tags:y.tags.filter(i=>i!==e)}):y),p=p.map(y=>y.tags&&y.tags.includes(e)?(P=!0,{...y,tags:y.tags.filter(i=>i!==e)}):y),P&&x.writeFileSync(r,JSON.stringify({pins:c,folders:p},null,2),"utf8")}n(S.join(o,".codepin.team.json")),n(S.join(o,".codepin.local.json"))}function Ne(o,e,n){let r=t.window.createQuickPick();r.placeholder="Search pins and folders by name or note...";function c(p){let P=p.toLowerCase(),y=o.filter(g=>g.title.toLowerCase().includes(P)||g.note?.toLowerCase().includes(P)).map(g=>({label:`$(pin) ${g.title}`,description:g.type==="team"?"Team Pin":"Local Pin",detail:g.note||"",alwaysShow:!0,pin:g})),i=e.filter(g=>g.title.toLowerCase().includes(P)||g.note?.toLowerCase().includes(P)).map(g=>({label:`$(folder) ${g.title}`,description:g.type==="team"?"Team Folder":"Local Folder",detail:g.note||"",alwaysShow:!0,folder:g}));r.items=[...i,...y]}r.onDidChangeValue(p=>{c(p)}),r.onDidAccept(()=>{let p=r.selectedItems[0];p.pin?n(p.pin,void 0):p.folder&&n(void 0,p.folder),r.hide()}),r.onDidHide(()=>r.dispose()),c(""),r.show()}function Oe(){}0&&(module.exports={FREE_LIMITS,activate,colorToEmoji,deactivate});
